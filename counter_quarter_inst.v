// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.


// Generated by Quartus Prime Version 18.1 (Build Build 625 09/12/2018)
// Created on Sun Jul 07 00:19:31 2024

counter_quarter counter_quarter_inst
(
	.start_count(start_count_sig) ,	// input  start_count_sig
	.end_count(end_count_sig) ,	// output  end_count_sig
	.enable(enable_sig) ,	// input  enable_sig
	.clk(clk_sig) ,	// input  clk_sig
	.resetb(resetb_sig) ,	// input  resetb_sig
	.en_counter_check(en_counter_check_sig) ,	// output  en_counter_check_sig
	.enable_check(enable_check_sig) ,	// output  enable_check_sig
	.prev_enable_check(prev_enable_check_sig) ,	// output  prev_enable_check_sig
	.counter_check(counter_check_sig) 	// output [6:0] counter_check_sig
);

defparam counter_quarter_inst.TIME_TO_COUNT = 'b0000100;
